---
title: "Tidy Data Mini-Lab"
output:
  html_document:
    toc: true
    toc_float: true
    number_sections: true
    df_print: paged
    css: ../../../styles.css
  pdf_document: default
---

**Duration: 30 minutes** 

Now it's your turn to practice the verbs on a new dataset. Complete the following task:

```{r}
library(tidyverse)
library(readxl)
library(skimr)
```



# MVP

**Task 1.**  
Load in the `country_data.csv` file and take a look at it. What needs changed in this to make it tidy? Which columns need made into long format, and which need spread to rows?

```{r}
#loading in data
country_data <- read_csv("data/country_data.csv", show_col_types = FALSE)

view(country_data)
```


<br>

**Task 2.**  
Do the appropriate pivoting of your columns using R  

pivot_longer()

```{r}
country_longer <- country_data %>% 
  pivot_longer(
    cols = Y1999:Y2001,
    names_to = "year",
    values_to = "count"
  )

head(country_longer, 10)
```


pivot_wider()
```{r}
country_wider <- country_longer %>% 
  pivot_wider(names_from = "type",
              values_from = "count")

country_wider
  
```


<br>

**Task 3.**  
Separate the `country` variable so you have the name in one column and the number in another.   

```{r}
country_tidy <- country_wider %>%
  separate(
    col = country,
    into = c("Country Number", "Country Name"),
    sep = "\\. "
  )
country_tidy
  
```


<br>

**Task 4.**  
Unite the `code_letter` and `code_numb` variables so that they are both in one column, with no spaces separating them.   

```{r}
country_code_unite <- country_tidy %>% 
  unite("Country code", code_letter, code_numb, sep = "")

country_code_unite
```

